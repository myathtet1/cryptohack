from my_library import gaussian_reduction, inverse_modulo
from Crypto.Util.number import long_to_bytes


def decrypt(q, h, f, g, e):
    a = (f*e) % q
    m = (a*inverse_modulo(f, g)) % g
    return m


q, h = (7638232120454925879231554234011842347641017888219021175304217358715878636183252433454896490677496516149889316745664606749499241420160898019203925115292257, 2163268902194560093843693572170199707501787797497998463462129592239973581462651622978282637513865274199374452805292639586264791317439029535926401109074800)
u = [1, h]
v = [0, q]
encrypted_Flag = 5605696495253720664142881956908624307570671858477482119657436163663663844731169035682344974286379049123733356009125671924280312532755241162267269123486523
f, g = gaussian_reduction(u, v)[0]
m = decrypt(q, h, f, g, encrypted_Flag)
print(long_to_bytes(m))
