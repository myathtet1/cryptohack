from Crypto.Util.number import isPrime, long_to_bytes
from my_library import inverse_modulo, pow_2
q = 117477667918738952579183719876352811442282667176975299658506388983916794266542270944999203435163206062215810775822922421123910464455461286519153688505926472313006014806485076205663018026742480181999336912300022514436004673587192018846621666145334296696433207116469994110066128730623149834083870252895489152123
g = 104831378861792918406603185872102963672377675787070244288476520132867186367073243128721932355048896327567834691503031058630891431160772435946803430038048387919820523845278192892527138537973452950296897433212693740878617106403233353998322359462259883977147097970627584785653515124418036488904398507208057206926

file = open("output_1078aca02f2ab796a8c51773f3c332ee.txt")
line = file.readline()
FLAG = ''
while line:
    line = int(file.readline().split("c2=")[1][:-2], 16)
    if pow_2(line, (q - 1) >> 1, q) == 1:
        FLAG += '1'
    else:
        FLAG += '0'
    line = file.readline()
FLAG = int(''.join(list(reversed(FLAG))), 2)
print(long_to_bytes(FLAG))
